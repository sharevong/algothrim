#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
求岛屿最大面积问题：
给定一个二维数组，元素1代表陆地，0代表海洋，上下左右相邻的1构成一个岛屿，求二维数组中最大岛屿的面积
如数组为
[[0,0,1,0,0,0,0,1,0,0,0,0,0],
 [0,0,0,0,0,0,0,1,1,1,0,0,0],
 [0,1,1,0,1,0,0,0,0,0,0,0,0],
 [0,1,0,0,1,1,0,0,1,0,1,0,0],
 [0,1,0,0,1,1,0,0,1,1,1,0,0],
 [0,0,0,0,0,0,0,0,0,0,1,0,0],
 [0,0,0,0,0,0,0,1,1,1,0,0,0],
 [0,0,0,0,0,0,0,1,1,0,0,0,0]]
最大岛屿面积为6，以第4行第9列为左上角，第6行第11列为右下角组成的岛屿为最大面积的岛屿
如数组为
[[0,0,0,0,0,0,0,0]]
最大岛屿面积为0
"""


def max_area(grid):
    result = 0
    for i in range(len(grid)):
        for j in range(len(grid[i])):
            if grid[i][j] == 1:
                area = dfs(grid, i, j)
                if area > result:
                    result = area
    return result


def dfs(grid, i, j):
    height = len(grid)
    width = len(grid[0])
    if height > i >= 0 and width > j >= 0 and grid[i][j] == 1:
        grid[i][j] = 0
        return 1 + dfs(grid, i + 1, j) + dfs(grid, i - 1, j) + dfs(grid, i, j + 1) + dfs(grid, i, j - 1)
    return 0


if __name__ == '__main__':
    grid = [[0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
            [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0],
            [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]]
    print(max_area(grid))

    grid = [[0,0,0,0,0,0,0,0]]
    print(max_area(grid))
